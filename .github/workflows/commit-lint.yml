---
name: üö¶ Commit Format Check
on:
 pull_request:
   branches:
     - development
jobs:
 check-commit-messages:
   name: üß™ Validate All Commits in PR
   runs-on: ubuntu-latest
   steps:
     - name: üì• Checkout PR code
       uses: actions/checkout@v3
       with:
         fetch-depth: 0  # Required to get full commit history
     - name: üîç Validate each commit message in PR
       run: |
         echo "üîç Checking all commits targeting 'development' branch..."
         BASE_BRANCH="origin/${{ github.base_ref }}"
         HEAD_BRANCH="HEAD"
         COMMITS=$(git log $BASE_BRANCH..$HEAD_BRANCH --pretty=format:"%H")
         echo "$COMMITS" > commit_list.txt
         VALID=true
         while read -r commit; do
           echo "üî∏ Checking commit: $commit"
           COMMIT_MSG=$(git log -1 --pretty=%B "$commit")
           echo "üîπ Commit message:"
           echo "--------------------"
           echo "$COMMIT_MSG"
           echo "--------------------"
           echo "$COMMIT_MSG" | grep -Eq "^\[Taurus-[0-9]+\]: .+" || {
             echo "‚ùå [$commit] Invalid summary format: should start with [Taurus-<number>]:"
             VALID=false
           }
           echo "$COMMIT_MSG" | grep -q "Issue:" || {
             echo "‚ùå [$commit] Missing 'Issue:' section"
             VALID=false
           }
           echo "$COMMIT_MSG" | grep -q "RootCause:" || {
             echo "‚ùå [$commit] Missing 'RootCause:' section"
             VALID=false
           }
           echo "$COMMIT_MSG" | grep -q "Fix:" || {
             echo "‚ùå [$commit] Missing 'Fix:' section"
             VALID=false
           }
           echo "$COMMIT_MSG" | grep -q "Testing:" || {
             echo "‚ùå [$commit] Missing 'Testing:' section"
             VALID=false
           }
           echo "$COMMIT_MSG" | grep -q "Signed-off-by:" || {
             echo "‚ùå [$commit] Missing 'Signed-off-by:' line"
             VALID=false
           }
         done < commit_list.txt
         if [ "$VALID" = false ]; then
           echo "‚ùå One or more commits did not meet the format requirements."
           exit 1
         else
           echo "‚úÖ All commits are valid."
         fi
